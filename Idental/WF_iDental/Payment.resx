<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADQAAAA0CAYAAADFeBvrAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAARoSURBVGhD7ZpbaFRXFIYTNdQLMdQYL0F9MEYUBaNS0Ir1gqA+WIjvfdK+CYoPPqgEDUUUvNBW
        2xetIFhUAhpvIIJRCBUV6rUiqGipd2yLl9rWS+P36xmZGWeftfeZCc7QLPiZyey11l7/2eesvfY6KSv7
        P0pHR0c5+Bh0L2n+EKgBG8A9IPkDbAFVnU2MOeaAveA6aAdLQJ/E82I8DTyMiGR/nNeKpZynraBWMQkq
        0gPFx3LHvL8qrmBSGE0Ffzmcpn4+y5dj0aoZqubwKzRugxNgu6H9D+NzvUmhXA0emCF8WIXHTF/nRQrF
        dR82Vu/ZD/sS0kNYKjLUJAWTZ6XChjhn+xC6XEKExvsQWloihC4QZ7kPoR4oHi1yUtpS7NVJ2yh7YbAV
        aH8oNrlGQBPMlcmlgGFrkbG5SzyVSclMLNIV+jIpIZU1xSh3CCqsSMVAlW4xS5P3KsGiG/g5IRuroM12
        G6qfsn/ElxovUih+kYDMTWxmRBdjMJ+7DB+nGB+rgPgcDX5KMOc3JiGc9gQ6c4TIS5Qbss4z3fntpMOJ
        Kvn+Wfo6QymDhchzlOtjSaGwLMRjpHvRkfJ1wswlOx36PySYu8VJCGcDgc4ZoXLDEeBKh6NWh/6e0Ikj
        /Zk5STG4KaFDmc3LuoUq+c11DFE1PypLfwS/PU04f/t7hHA0HPyb0KHMFGQz0NFdScWq2PUcLQafgkUg
        1YRJGsL8DFJ42ZnUU5HYXSGObm9I8aUeKFOVujSmCLlaRqVG8G3GI+ojBY78Kv52g/VgrQNqVh4GTwo4
        9+/4Khch3X+FEG2Mn7+7l81t/M3FrAKrCnjLV8vpbwVgcwMftR4cXFvGfOz/K0AcdSJ0Nk9HSvfjkpJJ
        2eFDPfR8pZ8I/ZinlzX5kome5T7EEVpHpod+P/UMLciDkKrs3oUgFJFqzCOWHaks1xsnrrcMlv+cjT6M
        BgC1w3Jlua/4fYrrIjC2z5rUMf7JO58orEjg5EBMUNZW8IL5RjiK1DrG/g6MJ7PPjXFFguTQEEOozQhI
        GW1kjH1LAKFb6A7MVaDWMqCel4/cjntucDAexFXPzYb9Rp8g0FEScR/yGBwCLnk406vJHkZQarTkalRu
        tJIIdoc8YlBFP8zypTSu47DeaVqywHKGA3Vf0+U0f8S+eI5W1yqW1YOotuZPTxJqBe83GOlMv9BYpeyG
        y7eG/nR8Wm8PD6ITvlXoSgIVkZYoow1yZCwvQth/BL4GVvnzvbXCsauGsf4/YY3FiHFtsBnH8GijNAlh
        Nwb4tLH0qtR+feJzH+JIx2TtHZbo2ROJfnGEotWfzOc2oFs3TvQ8LfaJM0gHp58B31pL2e0XcCZaPa2g
        cA60gT+tKxONq9cwKyjQEGWcV4HvPFfLM+acarogO0BGQzIk1iBdJhoFNgPtR4UU9QWV6p1VSFCgocpM
        rEw4CTQBvX5RpeH7Fl31mnp3x8FqoBZYxr/IhMbTafoE1hfE/c9P306bvMtx1xXougJ5XYHXKOjebRXP
        0MsAAAAASUVORK5CYII=
</value>
  </data>
</root>